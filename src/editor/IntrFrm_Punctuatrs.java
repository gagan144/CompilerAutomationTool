package editor;

import commanLib.ModelData;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class IntrFrm_Punctuatrs extends javax.swing.JInternalFrame {

    int count=0;
    
    public IntrFrm_Punctuatrs() {
        initComponents();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_Add = new javax.swing.JButton();
        btn_Del = new javax.swing.JButton();
        btn_Up = new javax.swing.JButton();
        btn_Down = new javax.swing.JButton();
        textF_cnt = new javax.swing.JTextField();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        textF_ret = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_cancel = new javax.swing.JButton();
        btn_ok = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setTitle("Punctuators");
        setPreferredSize(new java.awt.Dimension(406, 500));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setRows(5);
        jTextArea1.setText("Use pair column\nonly if your \npunctuator\nforms a pair. For\nexample : { }");
        jTextArea1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextArea1.setFocusable(false);
        jTextArea1.setOpaque(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Punctuators", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Punctuator", "Pair (if Any)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setNextFocusableComponent(btn_Add);
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        btn_Add.setText("Add New");
        btn_Add.setNextFocusableComponent(btn_Del);
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Del.setText("Delete");
        btn_Del.setNextFocusableComponent(btn_Up);
        btn_Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DelActionPerformed(evt);
            }
        });

        btn_Up.setText("Move Up");
        btn_Up.setNextFocusableComponent(btn_Down);
        btn_Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpActionPerformed(evt);
            }
        });

        btn_Down.setText("Move Down");
        btn_Down.setNextFocusableComponent(table);
        btn_Down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DownActionPerformed(evt);
            }
        });

        textF_cnt.setEditable(false);
        textF_cnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textF_cnt.setText("0");
        textF_cnt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Count", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N
        textF_cnt.setOpaque(false);

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 0, 51));
        jTextArea2.setRows(5);
        jTextArea2.setText("Please use \n'Enter' key after \neach entry to \noverwrite old\nvalue.\n");
        jTextArea2.setBorder(null);
        jTextArea2.setFocusable(false);
        jTextArea2.setOpaque(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Token Type", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        textF_ret.setEditable(false);
        textF_ret.setText("punc");

        jLabel1.setText("Token Name :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textF_ret)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textF_ret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_ok.setText("Ok");
        btn_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Down, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Up, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textF_cnt)
                    .addComponent(btn_Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textF_cnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Del)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Down)
                        .addGap(18, 18, 18)
                        .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_ok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancel)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)table.getModel();        
        model.insertRow(table.getRowCount(), new Object[]{"",""});
        count++;
        textF_cnt.setText(String.valueOf(count));
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_DelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DelActionPerformed
        // TODO add your handling code here:
        if(table.isEditing())
        { table.getCellEditor().stopCellEditing(); }
        
        int row=table.getSelectedRow();
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();        
        if(row!=-1)
        {
          model.removeRow(row);
          count--;
          textF_cnt.setText(String.valueOf(count));
        }
        
    }//GEN-LAST:event_btn_DelActionPerformed

    private void btn_UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpActionPerformed
        // TODO add your handling code here:
        if(table.isEditing())
        { table.getCellEditor().stopCellEditing(); }
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();        
        try
        {
            int rowCurr=table.getSelectedRow();        
        
            if(rowCurr!=0)
            { 
                model.moveRow(rowCurr, rowCurr, rowCurr-1); 
                table.setRowSelectionInterval(rowCurr-1, rowCurr-1);
            }
        }catch(Exception e) {}
        
        
        
    }//GEN-LAST:event_btn_UpActionPerformed

    private void btn_DownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DownActionPerformed
        // TODO add your handling code here:
        if(table.isEditing())
        { table.getCellEditor().stopCellEditing(); }
        
        DefaultTableModel model=(DefaultTableModel)table.getModel();        
        int rowCurr=table.getSelectedRow();
        
        if(rowCurr!=table.getRowCount()-1)
        { 
            model.moveRow(rowCurr, rowCurr, rowCurr+1); 
            table.setRowSelectionInterval(rowCurr+1, rowCurr+1);
        }
    }//GEN-LAST:event_btn_DownActionPerformed

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        // TODO add your handling code here:
        System.out.println("Frame Minimized");        
    }//GEN-LAST:event_formInternalFrameIconified

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        System.out.println("Key Pressed");
    }//GEN-LAST:event_formKeyPressed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        int response=JOptionPane.showConfirmDialog(this, "Apply Changes ?", "Apply", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION)
        {
            if(chkAndLoadToObject())
            { dispose(); }
        }
        else if(response==JOptionPane.NO_OPTION)
        { dispose(); }
    }//GEN-LAST:event_formInternalFrameClosing

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_okActionPerformed
        // TODO add your handling code here:
        if(chkAndLoadToObject())
        { dispose(); }
    }//GEN-LAST:event_btn_okActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Del;
    private javax.swing.JButton btn_Down;
    private javax.swing.JButton btn_Up;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTable table;
    private javax.swing.JTextField textF_cnt;
    private javax.swing.JTextField textF_ret;
    // End of variables declaration//GEN-END:variables

    
    //---------------METHODS-----------------------------
    
    public void loadData()
    {
        count=CATModeler.data.loadPunctFrm(table,textF_ret);
        textF_cnt.setText(String.valueOf(count));
    }
            
    public boolean chkAndLoadToObject()
    {
        if(table.isEditing())
        { table.getCellEditor().stopCellEditing(); }
        
        boolean flag=true;
        String value="";
        HashSet<Character> list = new HashSet<Character>();
        
        if(count==0)      //chk
        {   
            CATModeler.data.addPunctuators(null,"");
            //LanguageEditor.data.showData();
            return true; 
        }
        else
        {   
            //chk values
            for(int r=0;r<count;r++)
            {   
                    value=String.valueOf(table.getModel().getValueAt(r,0));
                    if(value.equals(""))
                    {
                        CATModeler.setMessages("Punctuators | Please fill all entries!", "", 0);
                        flag=false;
                        break;
                    }
                    else if(list.contains(value.charAt(0)))
                    {
                        CATModeler.setMessages("Punctuators | Row "+(r+1)+" - punctuator already in use!", "Error!", 0);
                        flag=false;
                        break;
                    }  
                    else
                    { list.add(value.charAt(0)); }           
            }
            
            if(textF_ret.getText().equals(""))
            { 
                CATModeler.setMessages("Punctuators | Please enter the return type!", "", 0);
                flag=false; 
            }
            
        }
        
        if(flag)   ///add data
        {               
            //LanguageEditor.data.resetInputSet();
            
            int r;
            String tmp[][]= new String[count][2];
            for(r=0;r<count;r++)
            {             
                for(int c=0;c<2;c++)
                {
                    tmp[r][c]=String.valueOf(table.getModel().getValueAt(r,c));
                    //System.out.print(tmp[r][c]+" ");
                }   
                //System.out.println();
            }
            
            CATModeler.data.addPunctuators(tmp, textF_ret.getText());            
                     
            //LanguageEditor.data.showData();
            CATModeler.setMessages("", "", 0);
                        
            
        }       
     
        return flag;
        
    }

}
