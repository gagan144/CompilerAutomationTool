package editor;

import com.mxgraph.swing.mxGraphComponent;
import commanLib.DfaFunctions;
import commanLib.GraphNode;
import commanLib.Panel_Trans_legends;
import commanLib.Panel_mxGraphDisplay;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class IntrFrm_transDiag extends javax.swing.JInternalFrame {

    private int maxStateLb=-1;    
    private DefaultListModel LstMdl = new DefaultListModel();
    private GraphNode transDiag,currStPtr;
    private JComboBox comboBx=new JComboBox();
    private ArrayList<String> stateSet = new ArrayList<String>();
    private ArrayList<String> currSetAvaLinks = new ArrayList<String>();
    private int framID=-1;
    private char currStNtr;
    
    private Panel_mxGraphDisplay panel_mxGraph=null;
    
    public IntrFrm_transDiag() 
    {
        initComponents();
        
        //Reiniatize componenets       
        lst_states.setModel(LstMdl);        
        setLinksPanelEnable(false);
        //btn_doneTb.setVisible(false);
        //tabbedPane.setEnabledAt(1, false);  
        setEnableTabs(false);
        
        TableColumn stCol = table_Links.getColumnModel().getColumn(1);
        stCol.setCellEditor(new DefaultCellEditor(comboBx));
        
        //scrollpane corner button
        //scrollPane_mxGraph.setCorner(JScrollPane.LOWER_RIGHT_CORNER, tglBtn_outline);
        
        //popup menu
        popMenu_legends.add(new Panel_Trans_legends());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdBtnGp_StNtr = new javax.swing.ButtonGroup();
        tglBtn_outline = new javax.swing.JToggleButton();
        popMenu_outline = new javax.swing.JPopupMenu();
        popMenu_legends = new javax.swing.JPopupMenu();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textF_ret = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_states = new javax.swing.JList();
        btn_addLst = new javax.swing.JButton();
        btn_DelLst = new javax.swing.JButton();
        panel_Links = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Links = new javax.swing.JTable();
        btn_AddTb = new javax.swing.JButton();
        btn_DelTb = new javax.swing.JButton();
        btn_UpTb = new javax.swing.JButton();
        btn_DownTb = new javax.swing.JButton();
        btn_doneTb = new javax.swing.JButton();
        rdBtn_initl = new javax.swing.JRadioButton();
        rdBtn_intr = new javax.swing.JRadioButton();
        rdBtn_Acc = new javax.swing.JRadioButton();
        rdBtn_retrct = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        btn_insrtEnter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_cancel = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btn_gen = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btn_mxGraph_fit = new javax.swing.JButton();
        btn_mxGraph_zoomOut = new javax.swing.JButton();
        btn_mxGraph_zoomIn = new javax.swing.JButton();
        btn_mxGraph_autoLayt = new javax.swing.JButton();
        tglBtn_legends = new javax.swing.JToggleButton();
        panel = new javax.swing.JPanel();
        simExpr = new editor.SimulateRegExpr();

        tglBtn_outline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/eye.png"))); // NOI18N
        tglBtn_outline.setToolTipText("Adjust View");
        tglBtn_outline.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        tglBtn_outline.setFocusPainted(false);
        tglBtn_outline.setFocusable(false);
        tglBtn_outline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglBtn_outlineActionPerformed(evt);
            }
        });

        popMenu_outline.setMaximumSize(new java.awt.Dimension(101, 101));
        popMenu_outline.setMinimumSize(new java.awt.Dimension(101, 101));
        popMenu_outline.setPreferredSize(new java.awt.Dimension(101, 101));
        popMenu_outline.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                popMenu_outlinePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        popMenu_legends.setMaximumSize(new java.awt.Dimension(141, 101));
        popMenu_legends.setMinimumSize(new java.awt.Dimension(141, 101));
        popMenu_legends.setPreferredSize(new java.awt.Dimension(141, 101));
        popMenu_legends.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                popMenu_legendsPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(500, 500));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(459, 400));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Token Type", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        textF_ret.setEditable(false);
        textF_ret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textF_retActionPerformed(evt);
            }
        });

        jLabel1.setText("Token Name :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textF_ret, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textF_ret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "States", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        lst_states.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lst_states.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lst_statesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lst_states);

        btn_addLst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/Add_1.png"))); // NOI18N
        btn_addLst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_addLst.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_addLst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addLstActionPerformed(evt);
            }
        });

        btn_DelLst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/del_1.png"))); // NOI18N
        btn_DelLst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_DelLst.setEnabled(false);
        btn_DelLst.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_DelLst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DelLstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_addLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_DelLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 62, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_addLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_DelLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        panel_Links.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "State Properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        table_Links.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input", "Next State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_Links.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table_Links.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_Links);

        btn_AddTb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/Add_2.png"))); // NOI18N
        btn_AddTb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_AddTb.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_AddTb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddTbActionPerformed(evt);
            }
        });

        btn_DelTb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/del_1.png"))); // NOI18N
        btn_DelTb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_DelTb.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_DelTb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DelTbActionPerformed(evt);
            }
        });

        btn_UpTb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/up_1.png"))); // NOI18N
        btn_UpTb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_UpTb.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_UpTb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpTbActionPerformed(evt);
            }
        });

        btn_DownTb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/Down_1.png"))); // NOI18N
        btn_DownTb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_DownTb.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_DownTb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DownTbActionPerformed(evt);
            }
        });

        btn_doneTb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/Done_2.png"))); // NOI18N
        btn_doneTb.setText("Done");
        btn_doneTb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_doneTb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doneTbActionPerformed(evt);
            }
        });

        rdBtnGp_StNtr.add(rdBtn_initl);
        rdBtn_initl.setText("Initial");
        rdBtn_initl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtn_initlActionPerformed(evt);
            }
        });

        rdBtnGp_StNtr.add(rdBtn_intr);
        rdBtn_intr.setText("Intermediate");
        rdBtn_intr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtn_intrActionPerformed(evt);
            }
        });

        rdBtnGp_StNtr.add(rdBtn_Acc);
        rdBtn_Acc.setText("Accepting");
        rdBtn_Acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtn_AccActionPerformed(evt);
            }
        });

        rdBtnGp_StNtr.add(rdBtn_retrct);
        rdBtn_retrct.setText("Retract");
        rdBtn_retrct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtn_retrctActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Nature of State :");

        btn_insrtEnter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/insertEnterKey.png"))); // NOI18N
        btn_insrtEnter.setToolTipText("Insert newline character");
        btn_insrtEnter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_insrtEnter.setPreferredSize(new java.awt.Dimension(23, 23));
        btn_insrtEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insrtEnterActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Note: 'z' - set of all characters except white spaces");

        btn_cancel.setText("Cancel");
        btn_cancel.setToolTipText("Cancel State Properties");
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_LinksLayout = new javax.swing.GroupLayout(panel_Links);
        panel_Links.setLayout(panel_LinksLayout);
        panel_LinksLayout.setHorizontalGroup(
            panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_LinksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_LinksLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_AddTb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_DelTb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_UpTb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_DownTb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_insrtEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_LinksLayout.createSequentialGroup()
                        .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_LinksLayout.createSequentialGroup()
                                .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdBtn_Acc, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdBtn_initl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdBtn_intr)
                                    .addComponent(rdBtn_retrct, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_doneTb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panel_LinksLayout.setVerticalGroup(
            panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_LinksLayout.createSequentialGroup()
                .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_LinksLayout.createSequentialGroup()
                        .addComponent(btn_AddTb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_DelTb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_UpTb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_DownTb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_insrtEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(9, 9, 9)
                .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_LinksLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdBtn_initl)
                            .addComponent(rdBtn_intr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_LinksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdBtn_Acc)
                            .addComponent(rdBtn_retrct)))
                    .addGroup(panel_LinksLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btn_doneTb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Generate", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        btn_gen.setText("Generate Model");
        btn_gen.setEnabled(false);
        btn_gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_genActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_gen, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btn_gen)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_Links, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_Links, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("Design Transition Diagram", jPanel1);

        btn_mxGraph_fit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/zoomFit.png"))); // NOI18N
        btn_mxGraph_fit.setText("Fit on Screen");
        btn_mxGraph_fit.setToolTipText("Fit on Screen");
        btn_mxGraph_fit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_mxGraph_fit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mxGraph_fitActionPerformed(evt);
            }
        });

        btn_mxGraph_zoomOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/zoomOut.png"))); // NOI18N
        btn_mxGraph_zoomOut.setToolTipText("Zoom Out");
        btn_mxGraph_zoomOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_mxGraph_zoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mxGraph_zoomOutActionPerformed(evt);
            }
        });

        btn_mxGraph_zoomIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/Images/zoomIn.png"))); // NOI18N
        btn_mxGraph_zoomIn.setToolTipText("Zoom In");
        btn_mxGraph_zoomIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_mxGraph_zoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mxGraph_zoomInActionPerformed(evt);
            }
        });

        btn_mxGraph_autoLayt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/autoLayout.png"))); // NOI18N
        btn_mxGraph_autoLayt.setText("Auto Layout");
        btn_mxGraph_autoLayt.setToolTipText("Automatically set layout");
        btn_mxGraph_autoLayt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_mxGraph_autoLayt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mxGraph_autoLaytActionPerformed(evt);
            }
        });

        tglBtn_legends.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        tglBtn_legends.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/legends.png"))); // NOI18N
        tglBtn_legends.setText("Legends");
        tglBtn_legends.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tglBtn_legends.setContentAreaFilled(false);
        tglBtn_legends.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tglBtn_legends.setPreferredSize(new java.awt.Dimension(70, 23));
        tglBtn_legends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglBtn_legendsActionPerformed(evt);
            }
        });

        panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                panelComponentResized(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btn_mxGraph_zoomIn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mxGraph_zoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_mxGraph_fit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_mxGraph_autoLayt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(tglBtn_legends, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_mxGraph_zoomIn)
                    .addComponent(btn_mxGraph_zoomOut)
                    .addComponent(btn_mxGraph_fit)
                    .addComponent(btn_mxGraph_autoLayt)
                    .addComponent(tglBtn_legends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabbedPane.addTab("Transition Diagram", jPanel5);
        tabbedPane.addTab("Simulate Transition Diagram", simExpr);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddTbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddTbActionPerformed
        // TODO add your handling code here:
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        String val=String.valueOf(lst_states.getSelectedValue());
        
        //System.out.println("Ading links to : "+currStPtr.lb);
        
        
        //create new Row
        DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
        model.insertRow(table_Links.getRowCount(), new Object[]{"", ""});
        
        //Add combo box to table
        //String boxVal[]={"0","1","2","3"};
        //JComboBox comboBx = new JComboBox(boxVal);        
        TableColumn stCol = table_Links.getColumnModel().getColumn(1);
        stCol.setCellEditor(new DefaultCellEditor(comboBx));
        
        
        //count++;
        //textF_cnt.setText(String.valueOf(count));
    }//GEN-LAST:event_btn_AddTbActionPerformed

    private void btn_DelTbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DelTbActionPerformed
        // TODO add your handling code here:
        if(table_Links.isEditing())
        { table_Links.getCellEditor().stopCellEditing(); }
        
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        int row = table_Links.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
        if (row != -1) {
            model.removeRow(row);
            //count--;
            //textF_cnt.setText(String.valueOf(count));
        }

    }//GEN-LAST:event_btn_DelTbActionPerformed

    private void btn_UpTbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpTbActionPerformed
        // TODO add your handling code here:
        if(table_Links.isEditing())
        { table_Links.getCellEditor().stopCellEditing(); }
        
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
        try {
            int rowCurr = table_Links.getSelectedRow();

            if (rowCurr != 0) {
                model.moveRow(rowCurr, rowCurr, rowCurr - 1);
                table_Links.setRowSelectionInterval(rowCurr - 1, rowCurr - 1);
            }
        } catch (Exception e) {
        }



    }//GEN-LAST:event_btn_UpTbActionPerformed

    private void btn_DownTbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DownTbActionPerformed
        // TODO add your handling code here:
        if(table_Links.isEditing())
        { table_Links.getCellEditor().stopCellEditing(); }
        
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
        int rowCurr = table_Links.getSelectedRow();

        if (rowCurr != table_Links.getRowCount() - 1) {
            model.moveRow(rowCurr, rowCurr, rowCurr + 1);
            table_Links.setRowSelectionInterval(rowCurr + 1, rowCurr + 1);
        }
    }//GEN-LAST:event_btn_DownTbActionPerformed

    private void btn_DelLstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DelLstActionPerformed
        // TODO add your handling code here:                
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        try
        {
            String SelVal=String.valueOf(lst_states.getSelectedValue());
            String val=String.valueOf(maxStateLb);
            //System.out.println("\ndeleting : "+val);
            
            
            if(SelVal.equals(val) && lst_states.isEnabled()==false)
            {  throw new Exception("Cannot Delete! State '"+SelVal+"' is being edited!"); }
            
            /*//Chk if state not in use
            DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
            for(int i=0;i<model.getRowCount();i++)
            {
                if(val.equals(String.valueOf(table_Links.getValueAt(i,1))))
                {  throw new Exception("Cannot Delete! State '"+val+"' already in use!"); }
            }
            */
            
            //delete last node from graph
            GraphNode ptr=transDiag,ptrPrev=transDiag;
            while(ptr.nextSt!=null)   //move to last state
            {
                ptrPrev=ptr;
                ptr=ptr.nextSt;                
            }
            System.out.println("State "+ptr.lb+" in use : "+isStateInUse(ptr.lb));
            
            if(isStateInUse(ptr.lb))
            {   throw new Exception("Cannot Delete! State '"+ptr.lb+"' already in use!");    }
            
            if(ptrPrev==ptr)
            { transDiag=null; }
            else
            { ptrPrev.nextSt=null;  }
            
            //remove from list
            LstMdl.remove(LstMdl.getSize()-1);
            
            //remove from combo box
            comboBx.removeItemAt(comboBx.getItemCount()-1);
            
            //remove from set state
            stateSet.remove(stateSet.size()-1);
            
            maxStateLb--;
            
            if(lst_states.getSelectedValue()==null)
            { resetLinkTable(); setLinksPanelEnable(false); }
            
            if(maxStateLb==-1)
            {  
                btn_DelLst.setEnabled(false);  
                setLinksPanelEnable(false);
                btn_gen.setEnabled(false);
                return; 
            }
             
        }catch(Exception e)
        {             
            JOptionPane.showMessageDialog(this, e.getMessage(), "Access Denied!", JOptionPane.ERROR_MESSAGE);
        }
        
        /*
        //-----del
            System.out.println("Transition Graph : ");
            GraphNode ptr=transDiag;
            while(ptr!=null)
            {
                System.out.print("State : "+ptr.lb+" Links : ");
                ptr.showLinks();
                System.out.println();
                ptr=ptr.nextSt;
            }
            System.out.println("State Set : "+stateSet);
            System.out.println("Max Set Label : "+maxStateLb);
        */
        
    }//GEN-LAST:event_btn_DelLstActionPerformed

    private void btn_addLstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addLstActionPerformed
        // TODO add your handling code here:
        
        //tabbedPane.setEnabledAt(1, false);
        setEnableTabs(false);
        
        //add to graph
        if(maxStateLb==-1)
        { 
            maxStateLb++;
            transDiag= new GraphNode(); 
            transDiag.lb=String.valueOf(maxStateLb);
            btn_gen.setEnabled(true);
            //transDiag.addStateToLast(transDiag, String.valueOf(maxStateLb));
        }
        else
        {
            maxStateLb++;        
            transDiag.addStateToLast(transDiag, String.valueOf(maxStateLb));
        }
          
        //aad to list
        LstMdl.addElement(maxStateLb);
        
        //add tp combo box
        comboBx.addItem(maxStateLb);
        
        //aad to set
        stateSet.add(stateSet.size(), String.valueOf(maxStateLb));
        
        btn_DelLst.setEnabled(true);
        
        //-----del
        /*
        System.out.println("\nTransition Graph : ");
        GraphNode ptr=transDiag;
        while(ptr!=null)
        {
            System.out.print("State : "+ptr.lb+" Links : ");
            ptr.showLinks();
            System.out.println();
            ptr=ptr.nextSt;
        }
        System.out.println("State Set : "+stateSet);
        * 
        */
        
        
    }//GEN-LAST:event_btn_addLstActionPerformed

    private void lst_statesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_statesMouseClicked
        // TODO add your handling code here:
        
        if(evt.getClickCount()==2)
        {   
            
            
            //tabbedPane.setEnabledAt(1, false);
            setEnableTabs(false);
            btn_gen.setEnabled(false);
            btn_DelLst.setEnabled(false);
            
            //change state
            String val=String.valueOf(lst_states.getSelectedValue());
                                        
            if(val.equals("null"))
            {  return; }
            else
            {   
                //Remove all rows
                resetLinkTable();
                
                //traverse to state
                GraphNode ptr=transDiag;
                while(ptr!=null)
                {
                    if(val.equals(ptr.lb))
                    { currStPtr=ptr; break; }
                    ptr=ptr.nextSt;
                }
                //System.out.println("I am at state : "+currStPtr.lb);
                
                //load state to table
                   //System.out.println("loading links : "); currStPtr.showLinks();
                currStPtr.showLinksOnTable(table_Links, comboBx);
                
                //load state nature
                rdBtnGp_StNtr.clearSelection();
                
                currStNtr=currStPtr.state;
                switch(currStPtr.state)
                {
                    case 'i' : rdBtn_initl.setSelected(true); break;
                    case 'o' : rdBtn_intr.setSelected(true); break;
                    case 'F' : rdBtn_Acc.setSelected(true); break;
                    case '*' : rdBtn_retrct.setSelected(true); break;
                }
                
                
            }
            
            setLinksPanelEnable(true);
            lst_states.setEnabled(false);
            //btn_doneTb.setVisible(true);            
        }
    }//GEN-LAST:event_lst_statesMouseClicked

    private void btn_doneTbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doneTbActionPerformed
        // TODO add your handling code here:
        if(table_Links.isEditing())
        { table_Links.getCellEditor().stopCellEditing(); }
        
        try
        {
            //if previous links not filled
            DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
            for(int i=0;i<model.getRowCount();i++)
            {
                for(int j=0;j<2;j++)
                {
                    if(String.valueOf(table_Links.getValueAt(i,j)).equals("") )
                    {  throw new Exception("Please complete all Entries!"); }
                    else if(String.valueOf(table_Links.getValueAt(i,0)).length()!=1 )
                    {  throw new Exception("Only single character value allowed in Input column!"); }                        
                    
                }
            }
            
            if(rdBtnGp_StNtr.getSelection()==null)
            {  throw new Exception("Please select nature of state!"); }
            currStPtr.state=currStNtr;
            
            //add to Graph
            currStPtr.resetLink();
            for(int i=0;i<model.getRowCount();i++)
            {
              currStPtr.addLink(transDiag,String.valueOf(table_Links.getValueAt(i,1)) , String.valueOf(table_Links.getValueAt(i,0)));            
            }
                        
            //reset table
            resetLinkTable();
            //btn_doneTb.setVisible(false);
            setLinksPanelEnable(false);
            
            //release lock
            lst_states.setEnabled(true);
            btn_gen.setEnabled(true);
            btn_DelLst.setEnabled(true);
            
            
            //delete
            System.out.println("Links for state : "+currStPtr.lb);
            currStPtr.showLinks();
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Access Denied!", JOptionPane.ERROR_MESSAGE);
        }    
    }//GEN-LAST:event_btn_doneTbActionPerformed

    private void btn_genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_genActionPerformed
        // TODO add your handling code here:
        CATModeler.setMessages("Generating Transition Diagram...", "Generating...", 20);
        if(transDiag!=null)
        {            
            //tabbedPane.setEnabledAt(1, true);
            setEnableTabs(true);
                
            //display mxGraph
            try
            {
                panel.removeAll();
                
                panel_mxGraph = new Panel_mxGraphDisplay(DfaFunctions.createMxGraph(transDiag));
                //scrollPane_mxGraph.setViewportView(panel_mxGraph);                  
                panel_mxGraph.setSize(panel.getSize());
        
                mxGraphComponent graphCmp=panel_mxGraph.getMxGraphComponent();
                graphCmp.setSize(panel.getSize());        
                graphCmp.setCorner(JScrollPane.LOWER_RIGHT_CORNER, tglBtn_outline);
                panel.add(graphCmp);
                panel.paintComponents(panel.getGraphics());    
                
                popMenu_outline.removeAll();
                popMenu_outline.add(panel_mxGraph.getGraphOutline());
                
                simExpr.getRefrence(transDiag,false);  
                
                CATModeler.setMessages("Done", "Generating...Done!", 100);
                
            }catch(Exception e)
            { CATModeler.setMessages("Transition Diagram | Unable to display graph! ", "", 100); }                
            
        }
        else
        { CATModeler.setMessages("Transition Diagram | Acces Denied! Transition diagram empty!", "", 100); }
        
        
        
        //del
        System.out.println("\nFinal Transition Graph : ");
        GraphNode ptr=transDiag;
        while(ptr!=null)
        {
            System.out.print("State : "+ptr.lb+"|"+ptr.state+"| Links : ");
            ptr.showLinks();
            System.out.println();
            ptr=ptr.nextSt;
        }
        System.out.println("max State Label: "+maxStateLb);
        System.out.println("State Set : "+stateSet);
        
        
    }//GEN-LAST:event_btn_genActionPerformed

    private void textF_retActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textF_retActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textF_retActionPerformed

    private void rdBtn_initlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtn_initlActionPerformed
        // TODO add your handling code here:
        currStNtr='i'; //currStPtr.state='i';
    }//GEN-LAST:event_rdBtn_initlActionPerformed

    private void rdBtn_intrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtn_intrActionPerformed
        // TODO add your handling code here:
        currStNtr='o'; //currStPtr.state='o';        
    }//GEN-LAST:event_rdBtn_intrActionPerformed

    private void rdBtn_AccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtn_AccActionPerformed
        // TODO add your handling code here:
        currStNtr='F'; //currStPtr.state='F';
    }//GEN-LAST:event_rdBtn_AccActionPerformed

    private void rdBtn_retrctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtn_retrctActionPerformed
        // TODO add your handling code here:
        currStNtr='*'; //currStPtr.state='*';
    }//GEN-LAST:event_rdBtn_retrctActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        
        
        if(transDiag==null && textF_ret.getText().equals(""))
        { 
            textF_ret.setText("");
            chkAndLoadToObject();
            dispose(); 
            return; 
        }
        
        //int response=JOptionPane.showConfirmDialog(this, "Apply changes to transition diagram and exit ?", "Apply", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);        
        int response=JOptionPane.showOptionDialog(this, "Apply changes to transition diagram and close ?", "Apply...", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,new String[]{"OK","Cancel"},null);
        
        if(response==JOptionPane.YES_OPTION)
        {
            if(chkAndLoadToObject())
            { dispose(); }
        }
        //else if(response==JOptionPane.NO_OPTION)
        //{ dispose(); }
        
        
        /*
        if(chkAndLoadToObject())
        { 
          JOptionPane.showMessageDialog(this, "All changes were applied!", "Apply", JOptionPane.INFORMATION_MESSAGE);
          dispose(); 
        }
        * 
        */
 
    }//GEN-LAST:event_formInternalFrameClosing

    private void btn_insrtEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insrtEnterActionPerformed
        // TODO add your handling code here:
        //int row= table_Links.getEditingRow();
        if(table_Links.isEditing())
        { table_Links.getCellEditor().stopCellEditing(); }
        
        int row= table_Links.getSelectedRow();
        System.out.println(row);
        if(row!=-1)
        {            
            table_Links.setValueAt("\n", row, 0);
        }
    }//GEN-LAST:event_btn_insrtEnterActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
            
            if(table_Links.isEditing())
            { table_Links.getCellEditor().stopCellEditing(); }
            
            //reset table
            resetLinkTable();
            //btn_doneTb.setVisible(false);
            setLinksPanelEnable(false);
            
            //release lock
            lst_states.setEnabled(true);
            btn_gen.setEnabled(true);
            btn_DelLst.setEnabled(true);
        
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_mxGraph_fitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mxGraph_fitActionPerformed
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        panel_mxGraph.zoomToFit(panel.getSize());
    }//GEN-LAST:event_btn_mxGraph_fitActionPerformed

    private void btn_mxGraph_zoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mxGraph_zoomOutActionPerformed
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        panel_mxGraph.zoomOut();
    }//GEN-LAST:event_btn_mxGraph_zoomOutActionPerformed

    private void btn_mxGraph_zoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mxGraph_zoomInActionPerformed
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        panel_mxGraph.zoomIn();
    }//GEN-LAST:event_btn_mxGraph_zoomInActionPerformed

    private void tglBtn_outlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglBtn_outlineActionPerformed
        // TODO add your handling code here:
        
        if(!popMenu_outline.isShowing() && tglBtn_outline.isSelected())
        {
            //System.out.println("SHOW");
            int x=tglBtn_outline.getX();
            int y=tglBtn_outline.getY();
            
            x=x-55;
            y=y-30;
            popMenu_outline.show(this, x,y);
        }
        else
        { tglBtn_outline.setSelected(false); }
    }//GEN-LAST:event_tglBtn_outlineActionPerformed

    private void popMenu_outlinePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_popMenu_outlinePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        tglBtn_outline.setSelected(false);
    }//GEN-LAST:event_popMenu_outlinePopupMenuWillBecomeInvisible

    private void btn_mxGraph_autoLaytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mxGraph_autoLaytActionPerformed
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        panel_mxGraph.autolayout();
    }//GEN-LAST:event_btn_mxGraph_autoLaytActionPerformed

    private void tglBtn_legendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglBtn_legendsActionPerformed
        // TODO add your handling code here:
        if(!popMenu_legends.isShowing() && tglBtn_legends.isSelected())
        {            
            int x=tglBtn_legends.getX();
            int y=tglBtn_legends.getY();
            
            x=x-50;
            y=y-38;
            popMenu_legends.show(this, x,y);
        }
        else
        { tglBtn_legends.setSelected(false); }
    }//GEN-LAST:event_tglBtn_legendsActionPerformed

    private void popMenu_legendsPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_popMenu_legendsPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        tglBtn_legends.setSelected(false);
    }//GEN-LAST:event_popMenu_legendsPopupMenuWillBecomeInvisible

    private void panelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelComponentResized
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        { panel_mxGraph.adjustSizeOfGraphComp(panel.getSize()); }
    }//GEN-LAST:event_panelComponentResized

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        if(panel_mxGraph!=null)
        { panel_mxGraph.adjustSizeOfGraphComp(panel.getSize()); }
    }//GEN-LAST:event_formComponentResized

    //----------MyMethods
    
    private boolean isStateInUse(String st)
    {
        GraphNode ptr=transDiag;
        while(ptr!=null)
        {
            if(ptr.isConnectedToState(st))
            { return true; }
            ptr=ptr.nextSt;
        }
        return false;
        
    }
    
    public void loadData(GraphNode t, String ret,int id)
    {
        if(getTitle().startsWith("Comments"))
        {  btn_insrtEnter.setVisible(true); }
        else    
        {  btn_insrtEnter.setVisible(false); }
        
        transDiag=t;
        textF_ret.setText(ret);
        framID=id;
        
        //add states to list
        
        GraphNode ptr=transDiag;
        while(ptr!=null)
        {            
            //inc maxStLbl
            maxStateLb++;
            
            //add to list
            LstMdl.addElement(maxStateLb);
            btn_DelLst.setEnabled(true);
        
            //add tp combo box
            comboBx.addItem(maxStateLb);
        
            //add to set
            stateSet.add(stateSet.size(), String.valueOf(maxStateLb));
            
            ptr=ptr.nextSt;
        }
        
        if(transDiag!=null)
        { btn_gen.setEnabled(true); }        
        
        
    }
    
    public boolean chkAndLoadToObject()
    {
        String ret=textF_ret.getText();
                
        if(!ret.equals(""))
        {
            CATModeler.data.addOprtrOrCmm(transDiag, ret, framID);            
            //LanguageEditor.data.showData();
            System.gc();
            return true;
        }
        else if(transDiag==null)
        {  CATModeler.data.addOprtrOrCmm(transDiag, "", framID);     return true; }
        
        CATModeler.setMessages("Transition Diagram | Denied! Please enter return string!", "", 0);
        return false;
        
    }
    
        
    private void resetLinkTable()
    {
        DefaultTableModel model = (DefaultTableModel) table_Links.getModel();
            for( int i = model.getRowCount() - 1; i >= 0; i-- )
            {  model.removeRow(i); }
    }
    
    private void setLinksPanelEnable(boolean flag)
    {
        table_Links.setEnabled(flag);
        btn_AddTb.setEnabled(flag);
        btn_DelTb.setEnabled(flag);
        btn_UpTb.setEnabled(flag);
        btn_DownTb.setEnabled(flag);
        btn_doneTb.setEnabled(flag);
        btn_cancel.setEnabled(flag);
        btn_insrtEnter.setEnabled(flag);
        
        rdBtn_initl.setEnabled(flag);
        rdBtn_intr.setEnabled(flag);
        rdBtn_Acc.setEnabled(flag);
        rdBtn_retrct.setEnabled(flag);
    }
    
    
    private void finalizeGraph()
    {
        GraphNode ptr=transDiag;
        while(ptr!=null)
        {
            if(ptr.links==null)
            {ptr.state='F'; }            
            ptr=ptr.nextSt;
        }
    }
    
    private void setEnableTabs(boolean value)
    {
        tabbedPane.setEnabledAt(1, value);
        tabbedPane.setEnabledAt(2, value);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddTb;
    private javax.swing.JButton btn_DelLst;
    private javax.swing.JButton btn_DelTb;
    private javax.swing.JButton btn_DownTb;
    private javax.swing.JButton btn_UpTb;
    private javax.swing.JButton btn_addLst;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_doneTb;
    private javax.swing.JButton btn_gen;
    private javax.swing.JButton btn_insrtEnter;
    private javax.swing.JButton btn_mxGraph_autoLayt;
    private javax.swing.JButton btn_mxGraph_fit;
    private javax.swing.JButton btn_mxGraph_zoomIn;
    private javax.swing.JButton btn_mxGraph_zoomOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lst_states;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel_Links;
    private javax.swing.JPopupMenu popMenu_legends;
    private javax.swing.JPopupMenu popMenu_outline;
    private javax.swing.ButtonGroup rdBtnGp_StNtr;
    private javax.swing.JRadioButton rdBtn_Acc;
    private javax.swing.JRadioButton rdBtn_initl;
    private javax.swing.JRadioButton rdBtn_intr;
    private javax.swing.JRadioButton rdBtn_retrct;
    private editor.SimulateRegExpr simExpr;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable table_Links;
    private javax.swing.JTextField textF_ret;
    private javax.swing.JToggleButton tglBtn_legends;
    private javax.swing.JToggleButton tglBtn_outline;
    // End of variables declaration//GEN-END:variables
}
