
package StatStudio;

import com.sun.webui.jsf.model.FileChooserModel;
import commanLib.CATFeedback.CATFeedback;
import commanLib.CatFileExtensions;
import commanLib.Dialog_ExceptionHandler;
import commanLib.PerformRecord;
import commanLib.StatisticData;
import commanLib.CatFileFilter;
import commanLib.Dialog_CollectForOutput;
import commanLib.Dialog_GenPDF;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.io.File;
import java.io.InvalidClassException;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartPanel;

public class CATStatStudio extends javax.swing.JFrame 
{
    private StatisticData statData = new StatisticData(null,null,null);
    private String filePath="";
    private boolean isLoaded=false;

    public CATStatStudio() 
    {
        constructorBody();
    }

    public CATStatStudio(StatisticData stData)
    {        
        constructorBody();        
        loadStatData(stData);              
    }
    
    private void constructorBody()
    {
        //(1)Set defualt look n feel
          try{
              //UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
          }catch(Exception e)
          { 
              //System.out.println("Windows isn't available");               
          }
          
        initComponents();
        
        //SetIcon
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/StatStudio/images/CAT_StatStudio_Icon.png")));
        
        this.setLocationRelativeTo(null);  
        
        //GUI
        table_comprList.getTableHeader().setPreferredSize(new Dimension(table_comprList.getTableHeader().getWidth(), 20));
        fileChooserStat.setAcceptAllFileFilterUsed(false);
        
        //Maximize frame
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
       /*
        //Delete        
        PerformRecord r0= new PerformRecord(500, "C:", 10, 12);
        PerformRecord r1= new PerformRecord(600, "C:", 15, 17);
        PerformRecord r2= new PerformRecord(700, "C:", 19, 21);
        PerformRecord r3= new PerformRecord(500, "C:", 10, 12);
        PerformRecord r4= new PerformRecord(500, "C:", 11, 13);
        PerformRecord r5= new PerformRecord(500, "C:", 10, 12);
        PerformRecord r6= new PerformRecord(600, "C:", 25, 27);
 
        
        statData.addNewRecord(r0);
        statData.addNewRecord(r1);
        statData.addNewRecord(r2);
        statData.addNewRecord(r3);
        statData.addNewRecord(r4);
        statData.addNewRecord(r5);
        statData.addNewRecord(r6);
        
        try{
            statData.setGUIComponenets(tableData, comboBx_LOC, comboBx_type);
            statData.setComboBox(comboBx_LOC_compr, comboBx_type_compr);
            
            StatisticData.writeToFile(statData, "E:\\myStatData.stc");
            
            
            ChartPanel chartPnl=statData.retLocVsTotTimeChartPanel();
            chartPnl.setBorder(new LineBorder(Color.BLACK));
            panel_graphs.setLayout(new java.awt.GridLayout(2, 2));
            panel_graphs.add(chartPnl);
            ChartPanel chartPnl2=statData.retLocVsTotTimeChartPanel();
            panel_graphs.add(chartPnl2);
           
        }catch(Exception e) 
        { System.out.println(e);  }
        //--------------------delete
        */
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserStat = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        panel_right = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_grphOptn = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBx_LOC = new javax.swing.JComboBox();
        comboBx_type = new javax.swing.JComboBox();
        btn_dispGraph = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboBx_LOC_compr = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        comboBx_type_compr = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_comprList = new javax.swing.JTable();
        btn_cpmr_add = new javax.swing.JButton();
        btn_compr_minus = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panel_graphs = new javax.swing.JPanel();
        tabbedPane_Left = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        textF_DataSrchStr = new javax.swing.JTextField();
        btn_symTb_srch = new javax.swing.JButton();
        comboBx_Search = new javax.swing.JComboBox();
        lbl_tot_records = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        textF_prgmLang = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textF_mdl = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textF_auth = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textA_descp = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        textF_exts = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_sysProp = new javax.swing.JTable();
        statusPanel = new javax.swing.JPanel();
        progrsBar = new javax.swing.JProgressBar();
        statusMsg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        menuBar = new javax.swing.JMenuBar();
        menuBar_File = new javax.swing.JMenu();
        menuBar_file_open = new javax.swing.JMenuItem();
        menuBar_file_saveAs = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuBar_file_pdf = new javax.swing.JMenuItem();
        menuBar_file_collect = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        menuBar_exit = new javax.swing.JMenuItem();
        menuBar_About = new javax.swing.JMenu();
        help_feedback = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        fileChooserStat.setFileFilter(new CatFileFilter(CatFileExtensions.STAT_FILE_EXT));

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Compiler Automation Tool â€“ Statistic Studio | [Untitled]");
        setMinimumSize(new java.awt.Dimension(400, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setDividerSize(6);
        jSplitPane1.setOneTouchExpandable(true);

        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("Please select your options for the graph to be displayed : ");

        jLabel3.setText("Line of Code (LOC) :");

        comboBx_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        btn_dispGraph.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/disp.png"))); // NOI18N
        btn_dispGraph.setText("Display Graph");
        btn_dispGraph.setToolTipText("Display graph");
        btn_dispGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dispGraphActionPerformed(evt);
            }
        });

        jLabel4.setText("Type of Graph :");

        javax.swing.GroupLayout panel_grphOptnLayout = new javax.swing.GroupLayout(panel_grphOptn);
        panel_grphOptn.setLayout(panel_grphOptnLayout);
        panel_grphOptnLayout.setHorizontalGroup(
            panel_grphOptnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_grphOptnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_grphOptnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(panel_grphOptnLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBx_LOC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBx_type, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btn_dispGraph)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        panel_grphOptnLayout.setVerticalGroup(
            panel_grphOptnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_grphOptnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_grphOptnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBx_LOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBx_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_dispGraph)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Graph Options", panel_grphOptn);

        jLabel5.setForeground(new java.awt.Color(0, 51, 255));
        jLabel5.setText("Add new graph for comparision :");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        comboBx_LOC_compr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBx_LOC_comprActionPerformed(evt);
            }
        });

        jLabel6.setText("Line of Code (LOC) :");

        comboBx_type_compr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        comboBx_type_compr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBx_type_comprActionPerformed(evt);
            }
        });

        jLabel7.setText("Type of Graph :");

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comparision List", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        table_comprList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loc", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_comprList.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table_comprList);

        btn_cpmr_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/add.png"))); // NOI18N
        btn_cpmr_add.setText("Add");
        btn_cpmr_add.setToolTipText("Add new graph to list");
        btn_cpmr_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cpmr_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cpmr_addActionPerformed(evt);
            }
        });

        btn_compr_minus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/del.png"))); // NOI18N
        btn_compr_minus.setToolTipText("Remove selected graphs from list");
        btn_compr_minus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_compr_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_compr_minusActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/dispAll.png"))); // NOI18N
        jButton1.setText("Display All");
        jButton1.setToolTipText("Display all graphs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBx_LOC_compr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBx_type_compr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_cpmr_add)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_compr_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBx_LOC_compr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBx_type_compr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cpmr_add)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_compr_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Compare Graphs", jPanel1);

        panel_graphs.setBackground(new java.awt.Color(204, 204, 204));
        panel_graphs.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panel_graphsLayout = new javax.swing.GroupLayout(panel_graphs);
        panel_graphs.setLayout(panel_graphsLayout);
        panel_graphsLayout.setHorizontalGroup(
            panel_graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_graphsLayout.setVerticalGroup(
            panel_graphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_rightLayout = new javax.swing.GroupLayout(panel_right);
        panel_right.setLayout(panel_rightLayout);
        panel_rightLayout.setHorizontalGroup(
            panel_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(panel_graphs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_rightLayout.setVerticalGroup(
            panel_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_rightLayout.createSequentialGroup()
                .addComponent(panel_graphs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSplitPane1.setRightComponent(panel_right);

        tabbedPane_Left.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "<html>Lines Of<br>Code<br>(LOC)", "<html>Source Code<br> Path", "<html>Lexical<br>Time<br>(ms)", "<html>Total<br>Time<br>(ms)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableData);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        textF_DataSrchStr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textF_DataSrchStrKeyTyped(evt);
            }
        });

        btn_symTb_srch.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn_symTb_srch.setText("Search");
        btn_symTb_srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_symTb_srchActionPerformed(evt);
            }
        });

        comboBx_Search.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LOC", "Source Code Path", "Lexical Time", "Total Time" }));
        comboBx_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBx_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textF_DataSrchStr)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(comboBx_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(btn_symTb_srch)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(textF_DataSrchStr, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBx_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_symTb_srch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_tot_records.setBackground(java.awt.SystemColor.activeCaptionBorder);
        lbl_tot_records.setText("Total Records : 0");
        lbl_tot_records.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(lbl_tot_records, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_tot_records, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabbedPane_Left.addTab("Performance Data", jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Model Properties", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        jLabel9.setText("Programming Language : ");

        textF_prgmLang.setEditable(false);
        textF_prgmLang.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Model Version : ");

        textF_mdl.setEditable(false);
        textF_mdl.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Author : ");

        textF_auth.setEditable(false);
        textF_auth.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setText("Description : ");

        textA_descp.setEditable(false);
        textA_descp.setColumns(20);
        textA_descp.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textA_descp.setLineWrap(true);
        textA_descp.setRows(5);
        textA_descp.setWrapStyleWord(true);
        jScrollPane3.setViewportView(textA_descp);

        jLabel13.setText("Source code file extensions(s) :");

        textF_exts.setEditable(false);
        textF_exts.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textF_exts)
                            .addComponent(jScrollPane3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(textF_prgmLang))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textF_auth))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textF_mdl)))
                        .addGap(2, 2, 2)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textF_prgmLang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textF_mdl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(textF_auth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textF_exts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "System Information", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        table_sysProp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"User Name", null},
                {"Computer Name", null},
                {"OS Name", null},
                {"OS Version", null},
                {"System Manufacturer", null},
                {"System Model", null},
                {"System Type", null},
                {"CPU Model", null},
                {"CPU Speed", null},
                {"Total CPU Cores", null},
                {"CPU Manufacturer", null},
                {"RAM", null}
            },
            new String [] {
                "System Attribute", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_sysProp.setRowHeight(17);
        table_sysProp.setShowHorizontalLines(false);
        table_sysProp.setShowVerticalLines(false);
        table_sysProp.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(table_sysProp);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabbedPane_Left.addTab("Properties", jPanel4);

        jSplitPane1.setLeftComponent(tabbedPane_Left);

        statusPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        statusPanel.setPreferredSize(new java.awt.Dimension(900, 21));

        statusMsg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        jLabel1.setText("Â© 2013 Gagandeep, Hargeet, Amarpreet, Harpreet");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 15));

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(162, 162, 162)
                .addComponent(statusMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progrsBar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(progrsBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(statusMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar_File.setText("File");

        menuBar_file_open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuBar_file_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/open.png"))); // NOI18N
        menuBar_file_open.setText("Open ");
        menuBar_file_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_file_openActionPerformed(evt);
            }
        });
        menuBar_File.add(menuBar_file_open);

        menuBar_file_saveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuBar_file_saveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/saveStat.png"))); // NOI18N
        menuBar_file_saveAs.setText("Save As");
        menuBar_file_saveAs.setEnabled(false);
        menuBar_file_saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_file_saveAsActionPerformed(evt);
            }
        });
        menuBar_File.add(menuBar_file_saveAs);
        menuBar_File.add(jSeparator2);

        menuBar_file_pdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/pdf.png"))); // NOI18N
        menuBar_file_pdf.setText("Publish to PDF...");
        menuBar_file_pdf.setEnabled(false);
        menuBar_file_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_file_pdfActionPerformed(evt);
            }
        });
        menuBar_File.add(menuBar_file_pdf);

        menuBar_file_collect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/clctFrOutp.png"))); // NOI18N
        menuBar_file_collect.setText("Collect For Output...");
        menuBar_file_collect.setEnabled(false);
        menuBar_file_collect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_file_collectActionPerformed(evt);
            }
        });
        menuBar_File.add(menuBar_file_collect);
        menuBar_File.add(jSeparator3);

        menuBar_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuBar_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StatStudio/images/exit.png"))); // NOI18N
        menuBar_exit.setText("Exit");
        menuBar_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBar_exitActionPerformed(evt);
            }
        });
        menuBar_File.add(menuBar_exit);

        menuBar.add(menuBar_File);

        menuBar_About.setText("About");

        help_feedback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/feedback.png"))); // NOI18N
        help_feedback.setText("Send a Feedback Mail");
        help_feedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_feedbackActionPerformed(evt);
            }
        });
        menuBar_About.add(help_feedback);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/about.png"))); // NOI18N
        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuBar_About.add(jMenuItem2);

        menuBar.add(menuBar_About);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Dialog_StatStudio_About d=new Dialog_StatStudio_About(this, true);
        //d.getData(CNF.firstName+" "+CNF.lastName, CNF.company);
        d.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btn_dispGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dispGraphActionPerformed
        // TODO add your handling code here:
        String locChoice="",typeChoice="";
        locChoice=String.valueOf(comboBx_LOC.getSelectedItem());
        typeChoice=String.valueOf(comboBx_type.getSelectedItem());
        //System.out.println("Your selection loc="+locChoice+" type="+typeChoice);
        
        panel_graphs.removeAll();
        panel_graphs.setLayout(new GridLayout(1,1));
        
        try
        {
            addGraphToPanel(locChoice,typeChoice);
            paintComponents(getGraphics());  
        }catch(Exception e) 
        { Dialog_ExceptionHandler.autoPopJOptionPane(this, "Exception occured!", "Unidentified exception occured displaying graph!", e, JOptionPane.ERROR_MESSAGE); }
    }//GEN-LAST:event_btn_dispGraphActionPerformed

    private void btn_compr_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_compr_minusActionPerformed
        // TODO add your handling code here:                
        String locChoice=String.valueOf(comboBx_LOC_compr.getSelectedItem());
        String typeChoice=String.valueOf(comboBx_type_compr.getSelectedItem());
        
        int rows[]=table_comprList.getSelectedRows();        
        String locTbl="",typeTbl="";
        DefaultTableModel model=(DefaultTableModel)table_comprList.getModel();        
        if(rows.length!=0)
        { 
            for(int i=rows.length-1;i>=0;i--)
            {
                locTbl=String.valueOf(table_comprList.getValueAt(rows[i], 0));
                typeTbl=String.valueOf(table_comprList.getValueAt(rows[i], 1));
                if(locChoice.equals(locTbl) && typeChoice.equals(typeTbl))
                {  btn_cpmr_add.setEnabled(true);        }
                
                model.removeRow(rows[i]);   
            }
        }
    }//GEN-LAST:event_btn_compr_minusActionPerformed

    private void btn_cpmr_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cpmr_addActionPerformed
        // TODO add your handling code here:
        
        String locChoice=String.valueOf(comboBx_LOC_compr.getSelectedItem());
        String typeChoice=String.valueOf(comboBx_type_compr.getSelectedItem());
        //System.out.println("Adding loc="+locChoice+" type="+typeChoice);
        
        if(locChoice.equals("null"))
        { return; }
        
        DefaultTableModel model=(DefaultTableModel)table_comprList.getModel();
        model.insertRow(table_comprList.getRowCount(), new Object[]{locChoice,typeChoice});
        
        btn_cpmr_add.setEnabled(false);
    }//GEN-LAST:event_btn_cpmr_addActionPerformed

    private void comboBx_LOC_comprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBx_LOC_comprActionPerformed
        // TODO add your handling code here:        
        btn_cpmr_add.setEnabled(!isChoicePresentInComprTable());        
    }//GEN-LAST:event_comboBx_LOC_comprActionPerformed

    private void comboBx_type_comprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBx_type_comprActionPerformed
        // TODO add your handling code here:
        btn_cpmr_add.setEnabled(!isChoicePresentInComprTable());
    }//GEN-LAST:event_comboBx_type_comprActionPerformed

    private void textF_DataSrchStrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textF_DataSrchStrKeyTyped
        // TODO add your handling code here:
        textF_DataSrchStr.setForeground(Color.black);
    }//GEN-LAST:event_textF_DataSrchStrKeyTyped

    private void btn_symTb_srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_symTb_srchActionPerformed
        // TODO add your handling code here:
        tableData.clearSelection();
        String str=textF_DataSrchStr.getText();
        int row=-1;
        boolean flag=false;
        int col=comboBx_Search.getSelectedIndex();
              

        for(int i=0;i<tableData.getRowCount();i++)
        {
            switch(col)
            {
                case 1 : {  //source code
                            if( String.valueOf(tableData.getValueAt(i, col)).contains(str) )
                            {
                                row=i; 
                                flag=true;
                                tableData.addRowSelectionInterval(row, row);
                                //break;
                            }                    
                         }break;
                default : {
                            if( String.valueOf(tableData.getValueAt(i, col)).equals(str) )
                            {
                                row=i; 
                                flag=true;
                                tableData.addRowSelectionInterval(row, row);
                                //break;
                            }                      
                          }break;
            }
            
        }

        if(flag) //if(row!=-1)
        {
            textF_DataSrchStr.setForeground(Color.black);
            //tableData.setRowSelectionInterval(row, row);
            //tableData.scrollRectToVisible(new Rectangle(tableData.getCellRect(row, 0, true)));
        }
        else
        {
            textF_DataSrchStr.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_btn_symTb_srchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int noOfElements=table_comprList.getRowCount(),r,c;        
        if(noOfElements==0)
        { return; }
        
        double sqrt=Math.sqrt(noOfElements); //System.out.println(sqrt);
        
        if( (sqrt-Math.floor(sqrt))==0 )
        { r=c=(int) sqrt; }
        else
        {
            c=(int) sqrt+1;
            r=(int) Math.round(sqrt);            
        }
        //System.out.println(r+"x"+c);
        
        panel_graphs.removeAll();
        panel_graphs.setLayout(new GridLayout(r,c));
        
        try
        {
            
            for(int i=0;i<table_comprList.getRowCount();i++)
            {
                //System.out.println("Comapring "+table_comprList.getValueAt(i, 0)+" , "+String.valueOf(table_comprList.getValueAt(i, 1)));
                addGraphToPanel(String.valueOf(table_comprList.getValueAt(i, 0)) , String.valueOf(table_comprList.getValueAt(i, 1)));
            }
            paintComponents(getGraphics());  
        }catch(Exception e) 
        { Dialog_ExceptionHandler.autoPopJOptionPane(this, "Exception occured!", "Unidentified exception occured displaying graphs!", e, JOptionPane.ERROR_MESSAGE); }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void menuBar_file_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_file_openActionPerformed
        // TODO add your handling code here:
        openStatFile();
    }//GEN-LAST:event_menuBar_file_openActionPerformed

    private void menuBar_file_saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_file_saveAsActionPerformed
        // TODO add your handling code here:
        saveToFile(true);
    }//GEN-LAST:event_menuBar_file_saveAsActionPerformed

    private void comboBx_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBx_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBx_SearchActionPerformed

    private void help_feedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_feedbackActionPerformed
        // TODO add your handling code here:
        CATFeedback frame = new CATFeedback();
        frame.setVisible(true);
    }//GEN-LAST:event_help_feedbackActionPerformed

    private void menuBar_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_exitActionPerformed
        // TODO add your handling code here:
        exitProgram();
    }//GEN-LAST:event_menuBar_exitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        exitProgram();
    }//GEN-LAST:event_formWindowClosing

    private void menuBar_file_collectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_file_collectActionPerformed
        // TODO add your handling code here:
        Dialog_CollectForOutput d = new Dialog_CollectForOutput(this, true, statData, filePath);
        d.setVisible(true);
    }//GEN-LAST:event_menuBar_file_collectActionPerformed

    private void menuBar_file_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBar_file_pdfActionPerformed
        // TODO add your handling code here:
        Dialog_GenPDF d = new Dialog_GenPDF(this, true, statData);
        d.setVisible(true);
    }//GEN-LAST:event_menuBar_file_pdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CATStatStudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CATStatStudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CATStatStudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CATStatStudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CATStatStudio().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_compr_minus;
    private javax.swing.JButton btn_cpmr_add;
    private javax.swing.JButton btn_dispGraph;
    private javax.swing.JButton btn_symTb_srch;
    private javax.swing.JComboBox comboBx_LOC;
    private javax.swing.JComboBox comboBx_LOC_compr;
    private javax.swing.JComboBox comboBx_Search;
    private javax.swing.JComboBox comboBx_type;
    private javax.swing.JComboBox comboBx_type_compr;
    private javax.swing.JFileChooser fileChooserStat;
    private javax.swing.JMenuItem help_feedback;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_tot_records;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBar_About;
    private javax.swing.JMenu menuBar_File;
    private javax.swing.JMenuItem menuBar_exit;
    private javax.swing.JMenuItem menuBar_file_collect;
    private javax.swing.JMenuItem menuBar_file_open;
    private javax.swing.JMenuItem menuBar_file_pdf;
    private javax.swing.JMenuItem menuBar_file_saveAs;
    private javax.swing.JPanel panel_graphs;
    private javax.swing.JPanel panel_grphOptn;
    private javax.swing.JPanel panel_right;
    private static javax.swing.JProgressBar progrsBar;
    private static javax.swing.JLabel statusMsg;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTabbedPane tabbedPane_Left;
    private javax.swing.JTable tableData;
    private javax.swing.JTable table_comprList;
    private javax.swing.JTable table_sysProp;
    public javax.swing.JTextArea textA_descp;
    private javax.swing.JTextField textF_DataSrchStr;
    public javax.swing.JTextField textF_auth;
    public javax.swing.JTextField textF_exts;
    public javax.swing.JTextField textF_mdl;
    public javax.swing.JTextField textF_prgmLang;
    // End of variables declaration//GEN-END:variables

    private boolean isChoicePresentInComprTable()
    {   
        String locChoice=String.valueOf(comboBx_LOC_compr.getSelectedItem());
        String typeChoice=String.valueOf(comboBx_type_compr.getSelectedItem());
        
        String locTable="",typeTable="";
        for(int r=0;r<table_comprList.getRowCount();r++)
        {
            locTable=String.valueOf(table_comprList.getValueAt(r, 0));
            typeTable=String.valueOf(table_comprList.getValueAt(r, 1));
            
            if(locChoice.equals(locTable) && typeChoice.equals(typeTable))
            {                 
                return true; 
            }
        }
                
        return false;
    }
    
    private void addGraphToPanel(String locChoice,String typeChoice) throws Exception
    {
        if(typeChoice.equals(StatisticData.COMPILE_TIME))
        {
            if(locChoice.equals(StatisticData.ALL))
            {
                ChartPanel chartPnl=statData.retLocVsTotTimeChartPanel();
                panel_graphs.add(chartPnl);
            }else
            {
                int loc=Integer.parseInt(locChoice);
                ChartPanel chartPnl=statData.retLocVsTotTimeChartPanelForLoc(loc);
                panel_graphs.add(chartPnl);
            }
        }
        else if(typeChoice.equals(StatisticData.LEX_TIME))
        {
            if(locChoice.equals(StatisticData.ALL))
            {
                ChartPanel chartPnl=statData.retLocVsLexTimeChartPanel();
                panel_graphs.add(chartPnl);
            }else
            {
                int loc=Integer.parseInt(locChoice);
                ChartPanel chartPnl=statData.retLocVsLexTimeChartPanelForLoc(loc);
                panel_graphs.add(chartPnl);
            }
        }         
             
    }
    
    
    private void openStatFile()
    {        
        if(filePath.equals("Untitled"))
        {
            int result=JOptionPane.showConfirmDialog(this, "Do you want to save data ?", "Save Data...", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if(result==JOptionPane.YES_OPTION)
            {
                saveToFile(true);                
            }
            else if(result==JOptionPane.NO_OPTION)
            { }
            else //if(result==JOptionPane.CANCEL_OPTION)
            { return; }            
        }
        
        if(fileChooserStat.showOpenDialog(this)== JFileChooser.APPROVE_OPTION)   //approve button clicked
        {                                     
          String path="";
          path=fileChooserStat.getSelectedFile().getAbsolutePath();
          if(chkFileExt(path))
          {   
              try
              {
                  statData=StatisticData.readFromFile(path);                  
                  //statData.displayIndex();
                  
                  //model properties
                  textF_prgmLang.setText(statData.progLang);
                  textF_mdl.setText(statData.mdlVersion);
                  textF_auth.setText(statData.author);
                  String ext="";
                  for(String i : statData.extension)
                  { 
                      ext+=i;
                      if(!i.equals(statData.extension[statData.extension.length-1]))
                      {ext+=","; }
                  }
                  textF_exts.setText(ext);
                  textA_descp.setText(statData.descptn);
        
                  //System properties
                  table_sysProp.getModel().setValueAt(statData.sysProp.USER_NAME, 0, 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.COMPUTER_NAME,1 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.OS_NAME,2 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.OS_VER, 3, 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.SYS_MANUF, 4, 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.SYS_MODEL, 5, 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.SYS_TYPE,6 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.CPU_MODEL,7 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.CPU_SPEED+" MHz",8 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.CPU_CORES,9 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.CPU_MANUF,10 , 1);
                  table_sysProp.getModel().setValueAt(statData.sysProp.RAM,11 , 1);
                  
                  statData.setGUIComponenets(tableData, comboBx_LOC, comboBx_type);
                  statData.setComboBox(comboBx_LOC_compr, comboBx_type_compr);
                  lbl_tot_records.setText("Total Records : "+statData.getTotalNoOfRecords());
                  resetAllGUI(); //clearCompareJTable();
                                                      
                  filePath=path;                                   
                  setTitle("Compiler Automation Tool â€“ Statistic Studio | ["+filePath+"]");
                  
                  //menuBar_file_save.setEnabled(true);
                  menuBar_file_saveAs.setEnabled(true);
                  menuBar_file_collect.setEnabled(true);
                  menuBar_file_pdf.setEnabled(true);
                  
              }
              catch(InvalidClassException ice)
              {
                  Dialog_ExceptionHandler.autoPopMessageJOptionPane(this, "Error reading statistic file...", "An error occurred while reading statistic file.", "Either the file is corrupted or you are using obsolete\nstatistic file version.", JOptionPane.ERROR_MESSAGE);
              }
              catch(Exception e)
              {                  
                  //JOptionPane.showMessageDialog(this, "Error Reading Statistic File!\n"+e, "Error reading File...", JOptionPane.ERROR_MESSAGE);                                                      
                  Dialog_ExceptionHandler.autoPopJOptionPane(this, "Error reading File...", "Error Reading Statistic File!", e, JOptionPane.ERROR_MESSAGE);
              }
                            
          }
          else
          {              
              JOptionPane.showMessageDialog(this, "File Not Supported!", "Error reading File...", JOptionPane.ERROR_MESSAGE);              
          }
        }
        else
        {
            //setStatusMesg("Loading Model...Aborted", 0);
        }
    }
    
    public void loadStatData(StatisticData stData)
    {
        statData=stData;
        
        //model properties
        textF_prgmLang.setText(statData.progLang);
        textF_mdl.setText(statData.mdlVersion);
        textF_auth.setText(statData.author);
        String ext="";
        for(String i : statData.extension)
        { 
            ext+=i;
            if(!i.equals(statData.extension[statData.extension.length-1]))
            {ext+=","; }
        }
        textF_exts.setText(ext);
        textA_descp.setText(statData.descptn);
        
        //System properties
        table_sysProp.getModel().setValueAt(stData.sysProp.USER_NAME, 0, 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.COMPUTER_NAME,1 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.OS_NAME,2 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.OS_VER, 3, 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.SYS_MANUF, 4, 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.SYS_MODEL, 5, 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.SYS_TYPE,6 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.CPU_MODEL,7 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.CPU_SPEED+" MHz",8 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.CPU_CORES,9 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.CPU_MANUF,10 , 1);
        table_sysProp.getModel().setValueAt(stData.sysProp.RAM,11 , 1);
        
        
              try
              {
                  statData.setGUIComponenets(tableData, comboBx_LOC, comboBx_type);
                  statData.setComboBox(comboBx_LOC_compr, comboBx_type_compr);
                  lbl_tot_records.setText("Total Records : "+statData.getTotalNoOfRecords());
                  resetAllGUI(); //clearCompareJTable();
                                                      
                  filePath="Untitled";                                   
                  setTitle("Compiler Automation Tool â€“ Statistic Studio | ["+filePath+"]");
                  
                  panel_graphs.removeAll();
                  //menuBar_file_save.setEnabled(true);
                  menuBar_file_saveAs.setEnabled(true);
                  menuBar_file_collect.setEnabled(true);
                  menuBar_file_pdf.setEnabled(true);
                  
              }catch(Exception e)
              {                  
                  //JOptionPane.showMessageDialog(this, "Error Reading Statistic File!\n"+e, "Error reading File...", JOptionPane.ERROR_MESSAGE);                                                      
                  Dialog_ExceptionHandler.autoPopJOptionPane(this, "Error reading File...", "Error Reading Statistic File!", e, JOptionPane.ERROR_MESSAGE);
              }
              isLoaded=true; //setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);   
    }
    
    private void resetAllGUI()  //clearCompareJTable()
    {
        DefaultTableModel model=(DefaultTableModel)table_comprList.getModel();
        for( int i = model.getRowCount() - 1; i >= 0; i-- )
        { model.removeRow(i); }
        
        btn_cpmr_add.setEnabled(true);
        panel_graphs.removeAll();
    }
            
    
    
    private boolean saveToFile(boolean saveAs)
    {
        
        String path="";
        boolean flag=true;
        if(filePath.equals("") || saveAs || filePath.equals("Untitled") )
        {
            if(fileChooserStat.showSaveDialog(this)== JFileChooser.APPROVE_OPTION)   //approve button clicked
            {
                path=fileChooserStat.getSelectedFile().getAbsolutePath();                
                
                filePath=insertFileExt(path);
            }            
            else
            { flag=false; }
        }
               
        
        if(flag)
        {               
            try
            {
                StatisticData.writeToFile(statData, filePath);
                setTitle("Compiler Automation Tool â€“ Statistic Studio | ["+filePath+"]");
                
            }catch(Exception e)
            { 
                filePath=""; 
                JOptionPane.showMessageDialog(this, "An error occurred while saving file!\n â€¢ Please check your directry path!\n â€¢ Check if the directory is not being used by another process!\n â€¢ Check you have admin rights to save file!", "Error Saving File!", JOptionPane.ERROR_MESSAGE);
            }            
            
            
        }
        
        return flag;
    }
    
    private String insertFileExt(String path)     //EXTENSION
    {
        String p="",ext="";
                try
                {               
                    StringTokenizer st =new StringTokenizer(path,".");
                       p=st.nextToken();
                       ext=st.nextToken();                          
               
                   if(!ext.equals(CatFileExtensions.STAT_FILE_EXT))                   
                   { path=p+"."+CatFileExtensions.STAT_FILE_EXT; }
               
                }catch(NoSuchElementException no)
                { path+="."+CatFileExtensions.STAT_FILE_EXT; }
        
                return path;
    }   
    
    
    private boolean chkFileExt(String path)
    {
        boolean flag=true;
        String p="",ext="";
        StringTokenizer st =new StringTokenizer(path,".");
        
        try
        {               
            p=st.nextToken();
            ext=st.nextToken();                          
               
            if(!ext.equals(CatFileExtensions.STAT_FILE_EXT))        // FILE EXTENSION              
            { flag=false; }
               
        }catch(NoSuchElementException no)
        { flag=false; }
        
        return flag;
    }
    
    private void exitProgram()
    {
        if(filePath.equals("Untitled"))
        {
            int result=JOptionPane.showConfirmDialog(this, "Do you want to save data before exiting ?", "Save Data...", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if(result==JOptionPane.YES_OPTION)
            {
                saveToFile(true);
                dispose();
            }
            else if(result==JOptionPane.NO_OPTION)
            {
                dispose();
            }
            else //if(result==JOptionPane.CANCEL_OPTION)
            { return; }            
        }
        else
        { 
            if(isLoaded) //if(getDefaultCloseOperation()==JFrame.DISPOSE_ON_CLOSE)
            { dispose(); }
            else
            { System.exit(0); }
        }
    }
            
}

/*
class StatFileFilter extends javax.swing.filechooser.FileFilter 
{
    private String extn="";

    public StatFileFilter(String ext) 
    {
        extn=ext;
    }
    

  public boolean accept(File f) {
    if (f.isDirectory())
      return true;
    String s = f.getName();
    int i = s.lastIndexOf('.');

    if (i > 0 && i < s.length() - 1)
      if (s.substring(i + 1).toLowerCase().equals(extn))
        return true;

    return false;
  }

  public String toString()
  {
      return extn;
  }
  
  public String getDescription() {
    return "*."+extn;
  }
}
*/