package commanLib;

import java.io.File;
import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class Dialog_GenPDF extends javax.swing.JDialog 
{
    private String savePath="";
    private StatisticData statisticData=null;
        
    private ProcessThread thread=null;

    public Dialog_GenPDF(java.awt.Frame parent, boolean modal,StatisticData stData) 
    {        
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);   
        
        progBar.setVisible(false);
        
        statisticData=stData;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser_pdf = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        btn_genPdf = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textF_path = new javax.swing.JTextField();
        btn_browse = new javax.swing.JButton();
        chkBox_pdf_inclData = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        progBar = new javax.swing.JProgressBar();

        fileChooser_pdf.setAcceptAllFileFilterUsed(false);
        fileChooser_pdf.setFileFilter(new CatFileFilter("pdf"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Publish to PDF");
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commanLib/images/PdfBanner.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("This window will allow you to generate a pdf file for your data. Please select a valid path and file name by clicking 'Browse' button. You may also include performance data in your pdf file by selecting the checkbox.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setFocusable(false);
        jTextArea1.setOpaque(false);

        btn_genPdf.setText("Generate PDF");
        btn_genPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_genPdfActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel2.setText("Path :");

        textF_path.setEditable(false);

        btn_browse.setText("Browse");
        btn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseActionPerformed(evt);
            }
        });

        chkBox_pdf_inclData.setText("Include Performance Data in pdf");
        chkBox_pdf_inclData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBox_pdf_inclDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextArea1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chkBox_pdf_inclData)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textF_path, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_browse))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_genPdf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(progBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(chkBox_pdf_inclData)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textF_path, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_genPdf)
                    .addComponent(btn_cancel))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        try{
            thread.stop();
            thread=null;
        }catch(Exception e){}
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseActionPerformed
        // TODO add your handling code here:        
        if(fileChooser_pdf.showSaveDialog(this)== JFileChooser.APPROVE_OPTION)   //approve button clicked
        {
            String path=fileChooser_pdf.getSelectedFile().getAbsolutePath();               
            savePath=insertFileExt(path);
            textF_path.setText(savePath);
        }                            
    }//GEN-LAST:event_btn_browseActionPerformed

    private void chkBox_pdf_inclDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBox_pdf_inclDataActionPerformed
        // TODO add your handling code here:        
    }//GEN-LAST:event_chkBox_pdf_inclDataActionPerformed

    private void btn_genPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_genPdfActionPerformed
        // TODO add your handling code here:
        if(savePath.equals(""))
        { 
            JOptionPane.showMessageDialog(this, "Please select a valid path along with\npdf file name.", "Invalid path...", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        
        btn_genPdf.setEnabled(false);
        btn_cancel.setEnabled(false);
        btn_browse.setEnabled(false);
        chkBox_pdf_inclData.setEnabled(false);
        
        progBar.setIndeterminate(true);
        progBar.setVisible(true);
        
        thread= new ProcessThread();        
        
        /*
        File filePdf=null;
        try
        {
            filePdf = new File(savePath);
            statisticData.generatePDG(filePdf, chkBox_pdf_inclData.isSelected()); 
            
            JOptionPane.showMessageDialog(this,"PDF file \'"+filePdf.getName()+"\' successfully created!","PDF file created...", WIDTH);
            dispose();
        }catch(Exception e)
        { 
            filePdf.delete(); 
            //e.printStackTrace();
            Dialog_ExceptionHandler.autoPopMessageJOptionPane(this, "Error generating PDF file...", "An error occurred while generating pdf file. ",e.getMessage(), JOptionPane.ERROR_MESSAGE);            
        }
        */
        
    }//GEN-LAST:event_btn_genPdfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dialog_GenPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dialog_GenPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dialog_GenPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dialog_GenPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dialog_GenPDF dialog = new Dialog_GenPDF(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private String insertFileExt(String path)     //EXTENSION
    {
        String p="",ext="";
                try
                {               
                    StringTokenizer st =new StringTokenizer(path,".");
                       p=st.nextToken();
                       ext=st.nextToken();                          
               
                   if(!ext.equals("pdf"))                   
                   { path=p+"."+"pdf"; }
               
                }catch(NoSuchElementException no)
                { path+="."+"pdf"; }
        
                return path;
    }   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_browse;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_genPdf;
    private javax.swing.JCheckBox chkBox_pdf_inclData;
    private javax.swing.JFileChooser fileChooser_pdf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JProgressBar progBar;
    private javax.swing.JTextField textF_path;
    // End of variables declaration//GEN-END:variables

    private class ProcessThread extends Thread
    {
        public ProcessThread() 
        { start();   }
        
        public void run()
        {

        File filePdf=null;
        try
        {            
            filePdf = new File(savePath);
            statisticData.generatePDG(filePdf, chkBox_pdf_inclData.isSelected()); 
            
            progBar.setVisible(false);
            
            JOptionPane.showMessageDialog(null,"PDF file \'"+filePdf.getName()+"\' successfully created!","PDF file created...", WIDTH);
            dispose();
        }catch(Exception e)
        { 
            filePdf.delete(); 
            //e.printStackTrace();
            
            //reset gui
            progBar.setVisible(false);
            btn_genPdf.setEnabled(true);
            btn_cancel.setEnabled(true);
            
            Dialog_ExceptionHandler.autoPopMessageJOptionPane(null, "Error generating PDF file...", "An error occurred while generating pdf file. ",e.getMessage(), JOptionPane.ERROR_MESSAGE);            
            
        }
        }
        
    }
}
