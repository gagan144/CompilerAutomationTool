package editor;

import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class intrFrm_Operators extends javax.swing.JInternalFrame {

    int count=0;
    
    public intrFrm_Operators() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_keyword = new javax.swing.JTable();
        btn_Add = new javax.swing.JButton();
        btn_Del = new javax.swing.JButton();
        btn_Up = new javax.swing.JButton();
        btn_Down = new javax.swing.JButton();
        textF_cnt = new javax.swing.JTextField();
        btn_Save = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Operators");
        setPreferredSize(new java.awt.Dimension(530, 450));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operator List (Highest to Lowest Precedence) ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        table_keyword.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operator", "Return Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_keyword.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table_keyword.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_keyword);

        btn_Add.setText("Add New");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Del.setText("Delete");
        btn_Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DelActionPerformed(evt);
            }
        });

        btn_Up.setText("Move Up");
        btn_Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpActionPerformed(evt);
            }
        });

        btn_Down.setText("Move Down");
        btn_Down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DownActionPerformed(evt);
            }
        });

        textF_cnt.setEditable(false);
        textF_cnt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textF_cnt.setText("0");
        textF_cnt.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Count", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N
        textF_cnt.setOpaque(false);

        btn_Save.setText("Save");
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Down, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Up, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textF_cnt)
                    .addComponent(btn_Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textF_cnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Del)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Up)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Down)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                        .addComponent(btn_Save)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)table_keyword.getModel();        
        model.insertRow(table_keyword.getRowCount(), new Object[]{"",""});
        count++;
        textF_cnt.setText(String.valueOf(count));
    }//GEN-LAST:event_btn_AddActionPerformed

    private void btn_DelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DelActionPerformed
        // TODO add your handling code here:
        int row=table_keyword.getSelectedRow();
        
        DefaultTableModel model=(DefaultTableModel)table_keyword.getModel();        
        if(row!=-1)
        {
          model.removeRow(row);
          count--;
          textF_cnt.setText(String.valueOf(count));
        }
        
    }//GEN-LAST:event_btn_DelActionPerformed

    private void btn_UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)table_keyword.getModel();        
        try
        {
            int rowCurr=table_keyword.getSelectedRow();        
        
            if(rowCurr!=0)
            { 
                model.moveRow(rowCurr, rowCurr, rowCurr-1); 
                table_keyword.setRowSelectionInterval(rowCurr-1, rowCurr-1);
            }
        }catch(Exception e) {}
        
        
        
    }//GEN-LAST:event_btn_UpActionPerformed

    private void btn_DownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DownActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)table_keyword.getModel();        
        int rowCurr=table_keyword.getSelectedRow();
        
        if(rowCurr!=table_keyword.getRowCount()-1)
        { 
            model.moveRow(rowCurr, rowCurr, rowCurr+1); 
            table_keyword.setRowSelectionInterval(rowCurr+1, rowCurr+1);
        }
    }//GEN-LAST:event_btn_DownActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:
        boolean flag=true;
        String value="";
        
        if(count==0)
        {
            System.out.println("No Entry in List!");
        }
        else
        {
            for(int r=0;r<count;r++)
            {
                for(int c=0;c<2;c++)             
                {
                    value=String.valueOf(table_keyword.getModel().getValueAt(r,c));
                    if(value.equals(""))
                    {
                        flag=false;
                        break;
                    }
                }                
            }
        }
        
        if(flag)
        {
            System.out.println("SAVED!");            
        }
        else
        {
            System.out.println("ERROR SAVING! PLEASE FILL ALL ENTRIES!");
        }
        
        
        
        
    }//GEN-LAST:event_btn_SaveActionPerformed

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        // TODO add your handling code here:
        System.out.println("Frame Minimized");        
    }//GEN-LAST:event_formInternalFrameIconified

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Del;
    private javax.swing.JButton btn_Down;
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_Up;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_keyword;
    private javax.swing.JTextField textF_cnt;
    // End of variables declaration//GEN-END:variables
}
