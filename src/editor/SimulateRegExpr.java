package editor;

import commanLib.GraphNode;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class SimulateRegExpr extends javax.swing.JPanel {

    private GraphNode dfa=null; 
    private boolean setChk;
    //private GraphNode last=null;
    private ArrayList<GraphNode> accStates = new ArrayList<GraphNode>();
    
    public SimulateRegExpr() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textF_str = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbl_intSt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSim = new javax.swing.JTable();
        lbl_accSt = new javax.swing.JLabel();
        lbl_fnlSt = new javax.swing.JLabel();
        lbl_remark = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(500, 400));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Test Case", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        jLabel1.setText("Enter String :");

        textF_str.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N

        jButton1.setText("Simulate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textF_str)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(textF_str, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1)
                .addComponent(jButton1))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Simulation", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N

        lbl_intSt.setForeground(new java.awt.Color(0, 51, 204));
        lbl_intSt.setText("Initial State :");

        tableSim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input", "Next State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSim.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableSim);
        tableSim.getColumnModel().getColumn(0).setResizable(false);
        tableSim.getColumnModel().getColumn(1).setResizable(false);

        lbl_accSt.setForeground(new java.awt.Color(0, 102, 51));
        lbl_accSt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_accSt.setText("Accepting State(s) :");

        lbl_fnlSt.setForeground(new java.awt.Color(255, 102, 0));
        lbl_fnlSt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_fnlSt.setText("Final State : ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbl_fnlSt, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_intSt, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(lbl_accSt, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(26, 26, 26))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_intSt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_accSt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_fnlSt)
                .addContainerGap())
        );

        lbl_remark.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_remark.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_remark.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remark", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 255))); // NOI18N
        lbl_remark.setPreferredSize(new java.awt.Dimension(38, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_remark, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_remark, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String text=textF_str.getText();    
        
        int bar=0,inc=0;
        CATModeler.setMessages("Simulating String : "+text+" ...","Simulating...",bar);
        inc=(100/(text.length()+1));
        
        char c;        
        resetTable();
        DefaultTableModel model=(DefaultTableModel)tableSim.getModel();
        
        if(text.equals(""))
        { text=" ";  }
        else if(CATModeler.data.isKeyword(text))
        { 
            model.addRow(new Object[]{text,"Terminated! Keyword found!"});            
            
            lbl_fnlSt.setText("Final State : Terminated");
            lbl_remark.setForeground(Color.red);
            lbl_remark.setText("NOT Accepted"); 
            
            CATModeler.setMessages("Done!","Simulating...Done!",100);
            return;
        }
        
        
        GraphNode ptr=dfa,reachedSt=null;        
        for(int i=0;i<text.length();i++)
        {              
            c=text.charAt(i);
            if(c==' ' && i==0)
            { 
                reachedSt=ptr;
                model.addRow(new Object[]{c,"Finished"});            
                break; 
            }
            
            ptr=ptr.getNextState(c,setChk,CATModeler.data);
            if(ptr==null)
            { 
                reachedSt=ptr;
                model.addRow(new Object[]{c,"Terminated"});            
                break; 
            }
            else
            {
                reachedSt=ptr;
                model.addRow(new Object[]{c,ptr.lb});            
            }    
            bar=bar+inc;
            CATModeler.setMessages(null,null,bar);   
        }
        
        if(reachedSt!=null)
        {
            lbl_fnlSt.setText("Final State : "+reachedSt.lb);
        
            //if(last.lb.equals(reachedSt.lb))
            if(accStates.contains(reachedSt))
            {            
                lbl_remark.setForeground(new Color(7, 131, 45));
                lbl_remark.setText("Accepted");
            }else
            {   
                lbl_remark.setForeground(Color.red);
                lbl_remark.setText("NOT Accepted");   
            }
        }
        else
        {
            lbl_fnlSt.setText("Final State : Terminated");
            lbl_remark.setForeground(Color.red);
            lbl_remark.setText("NOT Accepted"); 
        }
        
        CATModeler.setMessages("Done!","Simulating...Done!",100);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_accSt;
    private javax.swing.JLabel lbl_fnlSt;
    private javax.swing.JLabel lbl_intSt;
    private javax.swing.JLabel lbl_remark;
    private javax.swing.JTable tableSim;
    private javax.swing.JTextField textF_str;
    // End of variables declaration//GEN-END:variables

    public void getRefrence(GraphNode d,boolean stChk)
    {
        dfa=d;
        setChk=stChk;
        
        //get initial & accepting states
        GraphNode ptr=dfa;  
        lbl_intSt.setText("Initial State : "+ptr.lb);
        
        int cnt=0;
        while(ptr!=null)
        {  
            if(ptr.state=='F' || ptr.state=='*')                      //Identification of accepting states 
            {  accStates.add(cnt,ptr); cnt++; }
            ptr=ptr.nextSt;
            
        }
        //last=ptr;
        
        //set label in GUI
        String St="";
        for(int i=0;i<cnt;i++)
        {
            St+=accStates.get(i).lb;
            if(accStates.get(i).state=='*')
            {St+='*'; }
            if(i!=cnt-1)
            { St+=", "; }
        }
        lbl_accSt.setText("Accepting State(s) : "+St);
                
    }
    
    private void resetTable()
    {
        tableSim = new javax.swing.JTable();
        
        tableSim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input", "Next State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSim.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableSim);
        tableSim.getColumnModel().getColumn(0).setResizable(false);
        tableSim.getColumnModel().getColumn(1).setResizable(false);
    }

}
